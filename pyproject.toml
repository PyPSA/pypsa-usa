[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "PyPSA-USA"
dynamic = ["version"]
authors = [
    { name = "Kamran Tehranchi", email = "ktehranchi@stanford.edu" },
    { name = "Trevor Barnes", email = "trevor_barnes@sfu.ca" },
]
description = "PyPSA-USA"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: MIT License",
    "Topic :: Energy Systems Modeling",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
license = {file = "LICENSE.md"}
readme = "README.md"

[project.urls]
Documentation = "https://pypsa-usa.readthedocs.io/en/latest/"
Issues = "https://github.com/PyPSA/pypsa-usa/issues"
Source = "https://github.com/PyPSA/pypsa-usa"

[project.optional-dependencies]
dev = [
    "bump2version",
    "ipython",
    "pudb",
    "mypy~=1.11.0",
    "pre-commit",
    "ruff~=0.5.2",
    "types-PyYAML",
    "sphinx-autobuild",
    "sphinx",
    "sphinx-book-theme",
    "myst-parser",
]

[tool.setuptools.package-dir]
myproj = "workflow/scripts"

[tool.ruff]
line-length = 120
target-version = "py311"
exclude = [
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "TD",  # flake-8 todos
    #"PD",  # pandas vet
    "RUF", # Ruff rules
    "N",   # pep8
    "F",   # pyflakes
    "UP",  # pyupgrade
    "D",   # pydocstyle
    "C90", # Complex code
    "I",   # isort (import sorting)
]
mccabe.max-complexity = 10

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
extend-ignore = [
    "D105",  # Ignore: Missing docstring in magic methods (__init__, __str__, etc.).
    "D107",  # Ignore: Missing docstring in __init__ method.
    "D205",  # Ignore: 1st line of docstring should be separated from the summary with a blank line.
    "D415",  # Ignore: First line of a docstring should end with a period, question mark, or exclamation mark.
    "D401",  # Ignore: First line of a docstring should be in imperative mood (e.g., "Get" instead of "Gets").
    "D419",  # Ignore: Empty docstrings should not be allowed.
    "D103",  # Ignore: Missing docstring in a public function.
    "TD002", # Ignore: TODO comments should have an author name (e.g., "# TODO (John): Fix this").
    "TD003", # Ignore: TODO comments should have a specific issue/task reference.
    "PD010", # Ignore: `df.isna().sum()` should be replaced with `df.isnull().sum()` (allows both styles).
    "PD901", # Ignore: Avoid using `df` as a variable name for Pandas DataFrames (allows using `df`).
    "C901",  # Prevents Ruff from auto-fixing overly complex functions.
    "N802",  # Function naming lower case
    "E501"
]

unfixable = [

    "E741",  # Prevents Ruff from fixing ambiguous variable names (e.g., `l`, `O`, `I` which look like numbers).
]

pydocstyle.convention = "numpy"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"
